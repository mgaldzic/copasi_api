PROJECT( COPASIAPI )
CMAKE_MINIMUM_REQUIRED( VERSION 2.6 )
SET(LIBRARY_OUTPUT_PATH ${EXECUTABLE_OUTPUT_PATH})

# The version number.
set (COPASI_VERSION_MAJOR 1)
set (COPASI_VERSION_MINOR 0)

#---------------------
#    OS STUFF
#---------------------
IF (WIN32)
   SET(BUILD_OS WIN32)
ELSE(WIN32)    
    IF (UNIX)
        IF (APPLE)
            SET(BUILD_OS MAC)
        ELSEIF(APPLE)
            SET(BUILD_OS LINUX)
        ENDIF(APPLE)
    ENDIF(UNIX)
ENDIF(WIN32)

#-----------------------------------
#    INCLUDE DIRECTORIES
#-----------------------------------

INCLUDE_DIRECTORIES( 
    BEFORE
    #${COPASIAPI_SOURCE_DIR}
    ${COPASIAPI_SOURCE_DIR}/API
    ${COPASIAPI_SOURCE_DIR}/copasi
    ${COPASIAPI_SOURCE_DIR}/c
    ${COPASIAPI_SOURCE_DIR}/muparser
    ${COPASIAPI_SOURCE_DIR}/lapack/INCLUDE
    ${COPASIAPI_SOURCE_DIR}/expat/
    ${COPASIAPI_SOURCE_DIR}/curl/
    ${COPASIAPI_SOURCE_DIR}/expat/lib
    ${COPASIAPI_SOURCE_DIR}/libSBML/include
    ${COPASIAPI_SOURCE_DIR}/libSBML/src
    ${COPASIAPI_SOURCE_DIR}/raptor/src
    ${COPASIAPI_SOURCE_DIR}/raptor/librdfa
    ${COPASIAPI_SOURCE_DIR}/raptor/util
    ${COPASIAPI_SOURCE_DIR}/Antimony
    ${COPASIAPI_SOURCE_DIR}/galib/ga
    ${COPASIAPI_SOURCE_DIR}/galib
    ${COPASIAPI_SOURCE_DIR}/libstructural/include/
)



#--------------------------
#  COPASI SOURCE FILES
#--------------------------

FILE( GLOB copasi_SRC_FILES
    ${COPASIAPI_SOURCE_DIR}/copasi/model/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/compareExpressions/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/CopasiDataModel/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/crosssection/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/elementaryFluxModes/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/function/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/layout/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/libs/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/lyap/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/moieties/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/odepack++/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/optimization/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/parameterFitting/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/plot/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/randomGenerator/*.cpp    
    ${COPASIAPI_SOURCE_DIR}/copasi/sbml/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/sbmlunit/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/scan/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/sensitivities/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/steadystate/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/report/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/trajectory/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/tss/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/tssanalysis/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/utilities/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/xml/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/commandline/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/MIRIAM/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/MIRIAM/WebServicesIssues/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi/copasi_api.cpp
    ${COPASIAPI_SOURCE_DIR}/API/TC_structs.c
    ${COPASIAPI_SOURCE_DIR}/c/mtrand.c
)

ADD_DEFINITIONS(-DHAVE_EXPAT_CONFIG_H)
FILE( GLOB  EXPAT_SRC_FILES   ${COPASIAPI_SOURCE_DIR}/expat/lib/*.c)

#  All of these are third-party libraries
#SET(LIBRARY_OUTPUT_PATH ${EXECUTABLE_OUTPUT_PATH})
OPTION( BUILD_LAPACK "check this if your system does not have lapack library" ON )
#ADD_SUBDIRECTORY( copasi )  #main package
ADD_SUBDIRECTORY( muparser )  #math parser
ADD_SUBDIRECTORY( curl )      #needed by raptor
ADD_SUBDIRECTORY( raptor )    #RDF parser
IF (BUILD_LAPACK)
	ADD_SUBDIRECTORY( lapack )     #linear algebra
ENDIF(BUILD_LAPACK)
#ADD_SUBDIRECTORY( libSBML )    #systems biology markup language parser
ADD_SUBDIRECTORY( Antimony )   #human-readable test-based reaction networks
ADD_SUBDIRECTORY( libstructural )   #network structural analysis based on stoichiometry matrix
ADD_SUBDIRECTORY( galib )   #genetic algorithms library

FIND_PACKAGE( Qt4 )

#--------------------------
#  MAKE libcopasi
#--------------------------

ADD_LIBRARY( copasi
#  STATIC
  SHARED
  ${copasi_SRC_FILES}
  ${EXPAT_SRC_FILES}
)

TARGET_LINK_LIBRARIES( copasi
  copasi
  sbml
  raptor
  lapack
  blas
  f2c
  antimony
  galib
  structural
  muparser
  ${QT_QTCORE_LIBRARY}
)

#----------------------------------
#  INSTALL libcopasi in . (CPack)
#----------------------------------

IF ( WIN32 )
   INSTALL(TARGETS copasi DESTINATION bin/../)
ELSE ( WIN32 )
   INSTALL(TARGETS copasi LIBRARY DESTINATION bin/../)
ENDIF( WIN32 )

#----------------------------------
#  COPASI api
#----------------------------------

OPTION( TEST_COPASI_API "test copasi api" OFF )

IF (TEST_COPASI_API)
  ADD_EXECUTABLE(copasi_api_test test_copasi.c)
  TARGET_LINK_LIBRARIES( copasi_api_test copasi)
ENDIF (TEST_COPASI_API)

