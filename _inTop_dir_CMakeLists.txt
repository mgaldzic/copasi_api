PROJECT( COPASIAPI )
CMAKE_MINIMUM_REQUIRED( VERSION 2.6 )
SET(LIBRARY_OUTPUT_PATH ${EXECUTABLE_OUTPUT_PATH})

#---------------------
#    OS STUFF
#---------------------
IF (WIN32)
   SET(BUILD_OS WIN32)
ELSE(WIN32)    
    IF (UNIX)
        IF (APPLE)
            SET(BUILD_OS MAC)
        ELSEIF(APPLE)
            SET(BUILD_OS LINUX)
        ENDIF(APPLE)
    ENDIF(UNIX)

ENDIF(WIN32)

#-----------------------------------
#    INCLUDE DIRECTORIES
#-----------------------------------

INCLUDE_DIRECTORIES( 
    BEFORE
    ${COPASIAPI_SOURCE_DIR}
    ${COPASIAPI_SOURCE_DIR}/API
    ${COPASIAPI_SOURCE_DIR}/muparser
    ${COPASIAPI_SOURCE_DIR}/lapack/INCLUDE
    ${COPASIAPI_SOURCE_DIR}/expat/
    ${COPASIAPI_SOURCE_DIR}/curl/
    ${COPASIAPI_SOURCE_DIR}/expat/lib
    ${COPASIAPI_SOURCE_DIR}/libSBML/include
    ${COPASIAPI_SOURCE_DIR}/libSBML/src
    ${COPASIAPI_SOURCE_DIR}/raptor/src
    ${COPASIAPI_SOURCE_DIR}/raptor/librdfa
    ${COPASIAPI_SOURCE_DIR}/raptor/util
    ${COPASIAPI_SOURCE_DIR}/Antimony
    ${COPASIAPI_SOURCE_DIR}/galib/ga
    ${COPASIAPI_SOURCE_DIR}/galib
    ${COPASIAPI_SOURCE_DIR}/libstructural/include/
)

#---------------------
#    DEFINITIONS
#---------------------

ADD_DEFINITIONS(-DWITH_CSPMETHOD)
#ADD_DEFINITIONS(-D__cplusplus)
ADD_DEFINITIONS(-DUSE_CLAPACK)
#ADD_DEFINITIONS(-DUSE_LAPACK)
#ADD_DEFINITIONS(-DCOPASI_DEBUG)
#ADD_DEFINITIONS(-DDEBUG_MATRIX)
ADD_DEFINITIONS(-DTC_EXPORTS)

#------------------------------------------
#  DEFINITIONS FOR WINDOWS
#------------------------------------------

IF (WIN32)
    ADD_DEFINITIONS(-DWIN32)
    ADD_DEFINITIONS(-D_WIN32)
    ADD_DEFINITIONS(-D_WINDOWS)
    ADD_DEFINITIONS(-D_USRDLL)
    ADD_DEFINITIONS(-D_EXPORTS)
    ADD_DEFINITIONS(-DLIBSBML_EXPORTS)
    #ADD_DEFINITIONS(-DIN_LIBXML)
    IF (MINGW)
        ADD_DEFINITIONS(-DCYGWIN)
        ADD_DEFINITIONS(-D__CYGWIN__)
        IF (USE_STDCALL)
            ADD_DEFINITIONS(-DUSE_STDCALL)
         ENDIF(USE_STDCALL)
    ELSE(MINGW)
        ADD_DEFINITIONS(-Dstrcasecmp=_stricmp)
        ADD_DEFINITIONS(-Dstrncasecmp=_strnicmp)
    ENDIF(MINGW)
ENDIF (WIN32)
 IF (APPLE)
       ADD_DEFINITIONS(-D_APPLE)
ENDIF(APPLE)
#--------------------------
#  COPASI SOURCE FILES
#--------------------------

FILE( GLOB copasi_SRC_FILES
    ${COPASIAPI_SOURCE_DIR}/model/*.cpp
    ${COPASIAPI_SOURCE_DIR}/compareExpressions/*.cpp
    ${COPASIAPI_SOURCE_DIR}/CopasiDataModel/*.cpp
    ${COPASIAPI_SOURCE_DIR}/crosssection/*.cpp
    ${COPASIAPI_SOURCE_DIR}/elementaryFluxModes/*.cpp
    ${COPASIAPI_SOURCE_DIR}/function/*.cpp
    ${COPASIAPI_SOURCE_DIR}/layout/*.cpp
    ${COPASIAPI_SOURCE_DIR}/libs/*.cpp
    ${COPASIAPI_SOURCE_DIR}/lyap/*.cpp
    ${COPASIAPI_SOURCE_DIR}/moieties/*.cpp
    ${COPASIAPI_SOURCE_DIR}/odepack++/*.cpp
    ${COPASIAPI_SOURCE_DIR}/optimization/*.cpp
    ${COPASIAPI_SOURCE_DIR}/parameterFitting/*.cpp
    ${COPASIAPI_SOURCE_DIR}/plot/*.cpp
    ${COPASIAPI_SOURCE_DIR}/randomGenerator/*.cpp    
    ${COPASIAPI_SOURCE_DIR}/sbml/*.cpp
    ${COPASIAPI_SOURCE_DIR}/sbmlunit/*.cpp
    ${COPASIAPI_SOURCE_DIR}/scan/*.cpp
    ${COPASIAPI_SOURCE_DIR}/sensitivities/*.cpp
    ${COPASIAPI_SOURCE_DIR}/steadystate/*.cpp
    ${COPASIAPI_SOURCE_DIR}/report/*.cpp
    ${COPASIAPI_SOURCE_DIR}/trajectory/*.cpp
    ${COPASIAPI_SOURCE_DIR}/tss/*.cpp
    ${COPASIAPI_SOURCE_DIR}/tssanalysis/*.cpp
    ${COPASIAPI_SOURCE_DIR}/utilities/*.cpp
    ${COPASIAPI_SOURCE_DIR}/xml/*.cpp
    ${COPASIAPI_SOURCE_DIR}/commandline/*.cpp
    ${COPASIAPI_SOURCE_DIR}/MIRIAM/*.cpp
    ${COPASIAPI_SOURCE_DIR}/MIRIAM/WebServicesIssues/*.cpp
    ${COPASIAPI_SOURCE_DIR}/copasi_api.cpp
    ${COPASIAPI_SOURCE_DIR}/API/TC_structs.c
    ${COPASIAPI_SOURCE_DIR}/mtrand.c
)

ADD_DEFINITIONS(-DHAVE_EXPAT_CONFIG_H)
FILE( GLOB  EXPAT_SRC_FILES   ${COPASIAPI_SOURCE_DIR}/expat/lib/*.c)

#  All of these are third-party libraries
#SET(LIBRARY_OUTPUT_PATH ${EXECUTABLE_OUTPUT_PATH})
OPTION( BUILD_LAPACK "check this if your system does not have lapack library" ON )
#ADD_SUBDIRECTORY( copsai )  #main package
ADD_SUBDIRECTORY( muparser )  #math parser
ADD_SUBDIRECTORY( curl )      #needed by raptor
ADD_SUBDIRECTORY( raptor )    #RDF parser
IF (BUILD_LAPACK)
	ADD_SUBDIRECTORY( lapack )     #linear algebra
ENDIF(BUILD_LAPACK)
#ADD_SUBDIRECTORY( libSBML )    #systems biology markup language parser
ADD_SUBDIRECTORY( Antimony )   #human-readable test-based reaction networks
ADD_SUBDIRECTORY( libstructural )   #network structural analysis based on stoichiometry matrix
ADD_SUBDIRECTORY( galib )   #genetic algorithms library



#--------------------------
#  MAKE libcopasi
#--------------------------

ADD_LIBRARY( copasi
#  STATIC
  SHARED
  ${copasi_SRC_FILES}
  ${EXPAT_SRC_FILES}
)

TARGET_LINK_LIBRARIES( copasi
  copasi
  sbml
  raptor
  lapack
  blas
  f2c
  antimony
  galib
  structural
  muparser
  ${QT_QTCORE_LIBRARY}
)

#----------------------------------
#  INSTALL libcopasi in . (CPack)
#----------------------------------

IF ( WIN32 )
   INSTALL(TARGETS copasi DESTINATION bin/../)
ELSE ( WIN32 )
   INSTALL(TARGETS copasi LIBRARY DESTINATION bin/../)
ENDIF( WIN32 )

#----------------------------------
#  COPASI api
#----------------------------------

OPTION( TEST_COPASI_API "test copasi api" OFF )

IF (TEST_COPASI_API)
  ADD_EXECUTABLE(copasi_api_test test_copasi.c)
  TARGET_LINK_LIBRARIES( copasi_api_test copasi)
ENDIF (TEST_COPASI_API)

