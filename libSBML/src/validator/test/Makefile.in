## @configure_input@
##
## Filename    : Makefile.in
## Description : Makefile template for libsbml src/validator/test
## Author(s)   : SBML Team <sbml-team@caltech.edu>
## Organization: California Institute of Technology
## Created     : 2005-03-15
## Revision    : $Id: Makefile.in 10130 2009-08-28 12:25:24Z sarahkeating $
## $HeadURL: https://sbml.svn.sourceforge.net/svnroot/sbml/trunk/libsbml/src/validator/test/Makefile.in $
##
## Copyright 2005 California Institute of Technology and
## Japan Science and Technology Corporation.
##
## This library is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as published
## by the Free Software Foundation; either version 2.1 of the License, or
## any later version.
##
## This library is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF
## MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  The software and
## documentation provided hereunder is on an "as is" basis, and the
## California Institute of Technology and Japan Science and Technology
## Corporation have no obligations to provide maintenance, support,
## updates, enhancements or modifications.  In no event shall the
## California Institute of Technology or the Japan Science and Technology
## Corporation be liable to any party for direct, indirect, special,
## incidental or consequential damages, including lost profits, arising
## out of the use of this software and its documentation, even if the
## California Institute of Technology and/or Japan Science and Technology
## Corporation have been advised of the possibility of such damage.  See
## the GNU Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public License
## along with this library; if not, write to the Free Software Foundation,
## Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
##
## The original code contained here was initially developed by:
##
##     Ben Bornstein
##     SBML Team
##     Control and Dynamical Systems, MC 107-81
##     California Institute of Technology
##     Pasadena, CA, 91125, USA
##
##     http://www.sbml.org
##     mailto:sbml-team@caltech.edu
##
## Contributor(s):
##   Michael Hucka <mhucka@caltech.edu> Wrote this Makefile.in.
##


# -----------------------------------------------------------------------------
# Configuration variables
# -----------------------------------------------------------------------------
# Some of the following are substituted automatically by `configure'.  If
# you are looking at "Makefile", do not edit these values; instead, run the
# configure script at the top level of the src tree.  It will recreate
# "Makefile".

include @top_srcdir@/config/makefile-common-vars.mk

# `srcdir' points to the current directory, but should be set by configure.
# `subdir' must be set manually to the relative dir under `srcdir'.  Don't 
# set `subdir' to an absolute path, or some `make' actions will fail.

srcdir    = @srcdir@
thisdir   = src/validator/test

# Variables `headers', `sources', `libraries', `extra_CPPFLAGS',
# `extra_CXXFLAGS', `extra_LDFLAGS' and `distfiles' are used by the default
# rules in `makefile-common-actions.mk' included at the end.

test_sources =                 \
  TestFile.cpp                 \
  TestConsistencyValidator.cpp \
  TestValidator.cpp

test_headers =                 \
  TestFile.h                   \
  TestValidator.h

extra_CPPFLAGS = -I.. -I../..

ifdef USE_LIBCHECK
  check_driver      = TestConsistencyValidator
  ifeq "$(findstring $(LIBCHECK_CPPFLAGS),$(extra_CPPFLAGS))" ""
    extra_CPPFLAGS  += $(LIBCHECK_CPPFLAGS)
  endif
  ifeq "$(findstring $(LIBCHECK_LDFLAGS),$(extra_LDFLAGS))" ""
    extra_LDFLAGS   += $(LIBCHECK_LDFLAGS)
  endif
  ifeq "$(findstring $(LIBCHECK_LIBS),$(extra_LIBS))" ""
    extra_LIBS      += $(LIBCHECK_LIBS)
  endif
  extra_clean       += $(check_driver)
endif

ifdef USE_EXPAT
  extra_CPPFLAGS += $(EXPAT_CPPFLAGS)
  extra_LDFLAGS  += $(EXPAT_LDFLAGS)
  extra_LIBS     += $(EXPAT_LIBS)
endif

ifdef USE_XERCES
  extra_CPPFLAGS += $(XERCES_CPPFLAGS)
  extra_LDFLAGS  += $(XERCES_LDFLAGS)
  extra_LIBS     += $(XERCES_LIBS)
endif

ifdef USE_LIBXML
  extra_CPPFLAGS += $(LIBXML_CPPFLAGS)
  extra_LDFLAGS  += $(LIBXML_LDFLAGS)
  extra_LIBS     += $(LIBXML_LIBS)
ifdef BUGGY_APPLE_LIBXML
  extra_CPPFLAGS += -DBUGGY_APPLE_LIBXML=$(BUGGY_APPLE_LIBXML)
endif
endif

# `distfiles' determines the files and directories included in a distribution.
# `distfiles_exclude' is used to filter out specific items, so that even if
# they appear in `distfiles', they will not be copied in the distribution.

test_data_files = \
  $(wildcard test-data/*.xml) \
  $(wildcard test-data-conversion/*.xml)

test_extras =  \
  tps/dirent.c \
  tps/dirent.h

distfiles = $(test_sources) $(test_extras) $(test_headers) $(test_data_files) \
	    Makefile.in


# -----------------------------------------------------------------------------
# Primary build actions
# -----------------------------------------------------------------------------

# The default action is to do nothing except maybe remake the Makefile.  The
# real actions are triggered by 'make check'.

all: Makefile


# -----------------------------------------------------------------------------
# Checking.
# -----------------------------------------------------------------------------

# Variables $(test_objfiles), $(check_driver), and the rest of the code
# for running check are abstracted out into makefile-common-actions.mk,
# which is included at the bottom of this file.  Here we just need to construct
# the appropriate list of object files to link together.  Because there are
# dependencies on other subdirectoris of the source tree, we do some rummaging
# around in .. and ../../subdirs.

tmp           = $(test_sources:.cpp=.lo) $(test_sources:.c=.lo)
localobjfiles = $(filter %.lo,$(tmp))
otherdirs     = .. ../constraints ../../util ../../xml ../../math ../../sbml \
	 ../../units ../../annotation ../../compress ../../common

ifdef USE_LAYOUT
  otherdirs += ../../sbml/layout
endif

otherobjfiles = $(wildcard $(addsuffix /*.lo,$(otherdirs)))
test_objfiles = $(localobjfiles) $(otherobjfiles)


ifdef USE_LIBCHECK
  check: all run-checks
else
  check:; @echo Please first rerun 'configure' with the --with-check flag; exit 1
endif


# -----------------------------------------------------------------------------
# Installation
# -----------------------------------------------------------------------------

# This library doesn't actually get installed.  The main libsbml library
# (in ../src) slurps in the contents when it's built.

install:

uninstall:

installcheck:


# -----------------------------------------------------------------------------
# Cleaning.
# -----------------------------------------------------------------------------

clean: clean-normal

distclean: distclean-normal

mostlyclean: mostlyclean-normal

maintainer-clean: maintainer-clean-normal


# -----------------------------------------------------------------------------
# Creating distribution (for libSBML maintainers only)
# -----------------------------------------------------------------------------

dist: all dist-normal

distcheck: all distcheck-normal


# -----------------------------------------------------------------------------
# Miscellaneous
# -----------------------------------------------------------------------------

include @top_srcdir@/config/makefile-common-actions.mk


# -----------------------------------------------------------------------------
# End.
# -----------------------------------------------------------------------------
